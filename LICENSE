package com.example.note_taking;

import android.app.AlertDialog;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.EditText;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.ItemTouchHelper;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.ValueEventListener;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;

public class MainActivity extends AppCompatActivity implements NoteAdapter.OnNoteListener {

    private RecyclerView recyclerView;
    private NoteAdapter noteAdapter;
    private List<Note> noteList = new ArrayList<>();
    private FirebaseHelper firebaseHelper;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        firebaseHelper = new FirebaseHelper();
        recyclerView = findViewById(R.id.recycler_view);
        recyclerView.setLayoutManager(new LinearLayoutManager(this));

        noteAdapter = new NoteAdapter(noteList, this);
        recyclerView.setAdapter(noteAdapter);

        fetchNotes();

        ItemTouchHelper.SimpleCallback simpleItemTouchCallback = new ItemTouchHelper.SimpleCallback(0, ItemTouchHelper.LEFT | ItemTouchHelper.RIGHT) {
            @Override
            public boolean onMove(@NonNull RecyclerView recyclerView, @NonNull RecyclerView.ViewHolder viewHolder, @NonNull RecyclerView.ViewHolder target) {
                return false;
            }

            @Override
            public void onSwiped(@NonNull RecyclerView.ViewHolder viewHolder, int swipeDir) {
                int position = viewHolder.getAdapterPosition();
                Note note = noteList.get(position);
                deleteNoteFromFirebase(note.getId());
            }
        };

        ItemTouchHelper itemTouchHelper = new ItemTouchHelper(simpleItemTouchCallback);
        itemTouchHelper.attachToRecyclerView(recyclerView);
    }

    public void showAddNoteDialog() {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        LayoutInflater inflater = this.getLayoutInflater();
        View dialogView = inflater.inflate(R.layout.dialog_add_note, null);
        builder.setView(dialogView);

        EditText editTitle = dialogView.findViewById(R.id.edit_note_title);
        EditText editContent = dialogView.findViewById(R.id.edit_note_content);

        builder.setTitle("Add Note");
        builder.setPositiveButton("Save", (dialog, id) -> {
            String title = editTitle.getText().toString();
            String content = editContent.getText().toString();
            String date = new SimpleDateFormat("yyyy-MM-dd", Locale.getDefault()).format(new Date());

            if (!TextUtils.isEmpty(title) && !TextUtils.isEmpty(content)) {
                String noteId = firebaseHelper.getNewKey();
                Note note = new Note();
                note.setId(noteId);
                note.setTitle(title);
                note.setDate(date);
                note.setContent(content);
                addNoteToFirebase(note);
            } else {
                Toast.makeText(MainActivity.this, "Please fill all fields", Toast.LENGTH_SHORT).show();
            }
        });
        builder.setNegativeButton("Cancel", (dialog, id) -> dialog.cancel());

        AlertDialog alertDialog = builder.create();
        alertDialog.show();
    }

    public void addNoteToFirebase(Note note) {
        firebaseHelper.add(note);
    }

    @Override
    public void onNoteClick(int position) {
        Note note = noteList.get(position);
        showEditNoteDialog(note);
    }

    public void showEditNoteDialog(Note note) {
        AlertDialog.Builder builder = new AlertDialog.Builder(this);
        LayoutInflater inflater = this.getLayoutInflater();
        View dialogView = inflater.inflate(R.layout.dialog_add_note, null);
        builder.setView(dialogView);

        EditText editTitle = dialogView.findViewById(R.id.edit_note_title);
        EditText editContent = dialogView.findViewById(R.id.edit_note_content);

        editTitle.setText(note.getTitle());
        editContent.setText(note.getContent());

        builder.setTitle("Edit Note")
                .setPositiveButton("Update", (dialog, id) -> {
                    String title = editTitle.getText().toString();
                    String content = editContent.getText().toString();

                    if (!TextUtils.isEmpty(title) && !TextUtils.isEmpty(content)) {
                        note.setTitle(title);
                        note.setContent(content);
                        updateNoteInFirebase(note);
                    } else {
                        Toast.makeText(MainActivity.this, "Please fill all fields", Toast.LENGTH_SHORT).show();
                    }
                })
                .setNegativeButton("Cancel", (dialog, id) -> dialog.cancel());

        AlertDialog alertDialog = builder.create();
        alertDialog.show();
    }

    public void updateNoteInFirebase(Note note) {
        firebaseHelper.update(note.getId(), note);
    }

    @Override
    public void onNoteLongClick(int position) {
        Note note = noteList.get(position);
        new AlertDialog.Builder(MainActivity.this)
                .setTitle("Delete Note")
                .setMessage("Are you sure you want to delete this note?")
                .setPositiveButton(android.R.string.yes, (dialog, which) -> {
                    deleteNoteFromFirebase(note.getId());
                })
                .setNegativeButton(android.R.string.no, null)
                .show();
    }

    public void deleteNoteFromFirebase(String id) {
        firebaseHelper.delete(id);
    }

    public void fetchNotes() {
        firebaseHelper.getAll().addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {
                noteList.clear();
                for (DataSnapshot snapshot : dataSnapshot.getChildren()) {
                    Note note = snapshot.getValue(Note.class);
                    noteList.add(note);
                }
                noteAdapter.notifyDataSetChanged();
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {
                // Handle possible errors.
            }
        });
    }
}
